From e95059590fadaabd9aadc0c0489804d75a3c5d52 Mon Sep 17 00:00:00 2001
From: maryam ebrahimzadeh <maryam.ebr@student.sharif.edu>
Date: Mon, 19 Jul 2021 18:52:50 +0430
Subject: [PATCH 1/3] gdImageGd2Ptr memory leak

---
 src/gd_gd2.c | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

Index: libgd2-2.2.5/src/gd_gd2.c
===================================================================
--- libgd2-2.2.5.orig/src/gd_gd2.c
+++ libgd2-2.2.5/src/gd_gd2.c
@@ -903,9 +903,11 @@ _gd2PutHeader (gdImagePtr im, gdIOCtx *
 
 }
 
-static void
+/* returns 0 on success, 1 on failure */
+static int
 _gdImageGd2 (gdImagePtr im, gdIOCtx * out, int cs, int fmt)
 {
+	int ret = 0;
 	int ncx, ncy, cx, cy;
 	int x, y, ylo, yhi, xlo, xhi;
 	int chunkLen;
@@ -967,10 +969,12 @@ _gdImageGd2 (gdImagePtr im, gdIOCtx * ou
 		/* */
 		chunkData = gdCalloc (cs * bytesPerPixel * cs, 1);
 		if (!chunkData) {
+			ret = 1;
 			goto fail;
 		}
 		compData = gdCalloc (compMax, 1);
 		if (!compData) {
+			ret = 1;
 			goto fail;
 		}
 
@@ -985,6 +989,7 @@ _gdImageGd2 (gdImagePtr im, gdIOCtx * ou
 
 		chunkIdx = gdCalloc (idxSize * sizeof (t_chunk_info), 1);
 		if (!chunkIdx) {
+			ret = 1;
 			goto fail;
 		}
 	};
@@ -1100,6 +1105,8 @@ fail:
 	}
 	GD2_DBG (printf ("Done\n"));
 
+	return ret;
+
 }
 
 /*
@@ -1121,8 +1128,13 @@ BGD_DECLARE(void *) gdImageGd2Ptr (gdIma
 	void *rv;
 	gdIOCtx *out = gdNewDynamicCtx (2048, NULL);
 	if (out == NULL) return NULL;
-	_gdImageGd2 (im, out, cs, fmt);
-	rv = gdDPExtractData (out, size);
+	
+	if (_gdImageGd2(im, out, cs, fmt)) {
+		rv = NULL;
+	} else {
+		rv = gdDPExtractData(out, size);
+	}
+	
 	out->gd_free (out);
 	return rv;
 }
